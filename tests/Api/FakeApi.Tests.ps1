#
# OpenAPI Petstore
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: "" \
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'petstore' -name 'FakeApi' {
    Context 'Invoke-FakeHealthGet' {
        It 'Test Invoke-FakeHealthGet' {
            #$TestResult = Invoke-FakeHealthGet
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-FakeOuterBooleanSerialize' {
        It 'Test Invoke-FakeOuterBooleanSerialize' {
            #$TestResult = Invoke-FakeOuterBooleanSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-FakeOuterCompositeSerialize' {
        It 'Test Invoke-FakeOuterCompositeSerialize' {
            #$TestResult = Invoke-FakeOuterCompositeSerialize -OuterComposite "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-FakeOuterNumberSerialize' {
        It 'Test Invoke-FakeOuterNumberSerialize' {
            #$TestResult = Invoke-FakeOuterNumberSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-FakeOuterStringSerialize' {
        It 'Test Invoke-FakeOuterStringSerialize' {
            #$TestResult = Invoke-FakeOuterStringSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-BodyWithFileSchema' {
        It 'Test Test-BodyWithFileSchema' {
            #$TestResult = Test-BodyWithFileSchema -FileSchemaTestClass "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-BodyWithQueryParams' {
        It 'Test Test-BodyWithQueryParams' {
            #$TestResult = Test-BodyWithQueryParams -Query "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-ClientModel' {
        It 'Test Test-ClientModel' {
            #$TestResult = Test-ClientModel -Client "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EndpointParameters' {
        It 'Test Test-EndpointParameters' {
            #$TestResult = Test-EndpointParameters -Number "TEST_VALUE" -Double "TEST_VALUE" -PatternWithoutDelimiter "TEST_VALUE" -Byte "TEST_VALUE" -Integer "TEST_VALUE" -Int32 "TEST_VALUE" -Int64 "TEST_VALUE" -Float "TEST_VALUE" -String "TEST_VALUE" -Binary "TEST_VALUE" -Date "TEST_VALUE" -DateTime "TEST_VALUE" -Password "TEST_VALUE" -Callback "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EnumParameters' {
        It 'Test Test-EnumParameters' {
            #$TestResult = Test-EnumParameters -EnumHeaderStringArray "TEST_VALUE" -EnumHeaderString "TEST_VALUE" -EnumQueryStringArray "TEST_VALUE" -EnumQueryString "TEST_VALUE" -EnumQueryInteger "TEST_VALUE" -EnumQueryDouble "TEST_VALUE" -EnumFormStringArray "TEST_VALUE" -EnumFormString "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-GroupParameters' {
        It 'Test Test-GroupParameters' {
            #$TestResult = Test-GroupParameters -RequiredStringGroup "TEST_VALUE" -RequiredBooleanGroup "TEST_VALUE" -RequiredInt64Group "TEST_VALUE" -StringGroup "TEST_VALUE" -BooleanGroup "TEST_VALUE" -Int64Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-InlineAdditionalProperties' {
        It 'Test Test-InlineAdditionalProperties' {
            #$TestResult = Test-InlineAdditionalProperties -RequestBody "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-JsonFormData' {
        It 'Test Test-JsonFormData' {
            #$TestResult = Test-JsonFormData -Param "TEST_VALUE" -Param2 "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-QueryParameterCollectionFormat' {
        It 'Test Test-QueryParameterCollectionFormat' {
            #$TestResult = Test-QueryParameterCollectionFormat -Pipe "TEST_VALUE" -Ioutil "TEST_VALUE" -Http "TEST_VALUE" -Url "TEST_VALUE" -Context "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-UniqueItemsHeaderAndQueryParameterCollectionFormat' {
        It 'Test Test-UniqueItemsHeaderAndQueryParameterCollectionFormat' {
            #$TestResult = Test-UniqueItemsHeaderAndQueryParameterCollectionFormat -QueryUnique "TEST_VALUE" -HeaderUnique "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
